// Code generated by MockGen. DO NOT EDIT.
// Source: accrual.go

// Package mock_internal is a generated GoMock package.
package mock_internal

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIAccrual is a mock of IAccrual interface.
type MockIAccrual struct {
	ctrl     *gomock.Controller
	recorder *MockIAccrualMockRecorder
}

// MockIAccrualMockRecorder is the mock recorder for MockIAccrual.
type MockIAccrualMockRecorder struct {
	mock *MockIAccrual
}

// NewMockIAccrual creates a new mock instance.
func NewMockIAccrual(ctrl *gomock.Controller) *MockIAccrual {
	mock := &MockIAccrual{ctrl: ctrl}
	mock.recorder = &MockIAccrualMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIAccrual) EXPECT() *MockIAccrualMockRecorder {
	return m.recorder
}

// ProcessAccrual mocks base method.
func (m *MockIAccrual) ProcessAccrual(arg0 context.Context, arg1 int, arg2 string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ProcessAccrual", arg0, arg1, arg2)
}

// ProcessAccrual indicates an expected call of ProcessAccrual.
func (mr *MockIAccrualMockRecorder) ProcessAccrual(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ProcessAccrual", reflect.TypeOf((*MockIAccrual)(nil).ProcessAccrual), arg0, arg1, arg2)
}

// Run mocks base method.
func (m *MockIAccrual) Run() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Run")
}

// Run indicates an expected call of Run.
func (mr *MockIAccrualMockRecorder) Run() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Run", reflect.TypeOf((*MockIAccrual)(nil).Run))
}

// SendToQueue mocks base method.
func (m *MockIAccrual) SendToQueue(arg0 context.Context, arg1 int, arg2 string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SendToQueue", arg0, arg1, arg2)
}

// SendToQueue indicates an expected call of SendToQueue.
func (mr *MockIAccrualMockRecorder) SendToQueue(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendToQueue", reflect.TypeOf((*MockIAccrual)(nil).SendToQueue), arg0, arg1, arg2)
}
